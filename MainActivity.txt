package com.example.sas4;
import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.provider.AlarmClock;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.telephony.SmsManager;
import android.telephony.SmsMessage;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TimePicker;
import android.widget.Toast;
import java.util.ArrayList;



public class MainActivity extends Activity {

    private static final int MY_PERMISSIONS_REQUEST_SEND_SMS = 0;
    EditText recNum1;
    String recNum;
    Button setAlarm;
    String hour;
    String min;
    String msgString = "";

    @Override
    protected void onStart() {
        super.onStart();
        IntentFilter filter = new IntentFilter("android.provider.Telephony.SMS_RECEIVED");
        this.registerReceiver(smsReceiver, filter);
    }

    private ReadSMS smsReceiver = new ReadSMS() {
        @Override
        public void onReceive(Context context, Intent intent) {
            String messageText = getSMSContent(intent);
            Log.e("Message", messageText);
            Toast.makeText(getApplicationContext(), messageText, Toast.LENGTH_SHORT).show();
            if (messageText.charAt(0) == '~' && messageText.charAt(1) == '%' && messageText.charAt(2) == '&') {
                int hrr = Integer.parseInt(messageText.substring(3, 5));
                int minr = Integer.parseInt(messageText.substring(6, 8));
                Intent intent2 = new Intent(AlarmClock.ACTION_SET_ALARM);
                intent2.putExtra(AlarmClock.EXTRA_HOUR, hrr);
                intent2.putExtra(AlarmClock.EXTRA_MINUTES, minr);
                intent2.putExtra(AlarmClock.EXTRA_SKIP_UI, true);
                startActivity(intent2);
                Toast.makeText(getApplicationContext(), messageText, Toast.LENGTH_SHORT).show();
            }
        }


    };

    private String getSMSContent(Intent intent) {
        Bundle data = intent.getExtras();
        final Object[] pdusObj = (Object[]) data.get("pdus");
        for (Object obj : pdusObj) {
            SmsMessage currentMessage = SmsMessage.createFromPdu((byte[]) obj);

            String senderNumber = currentMessage.getDisplayOriginatingAddress(); // Sender Number
            Log.e("senderNumber", senderNumber);

            String smsContent = currentMessage.getDisplayMessageBody(); // SMS body Content
            Log.e("smsContent", smsContent);
            return smsContent;
        }
        return "";
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        if (ContextCompat.checkSelfPermission(this, Manifest.permission.SEND_SMS) != PackageManager.PERMISSION_GRANTED) {
            if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.SEND_SMS)) {
                Toast.makeText(getApplicationContext(), "Have permission", Toast.LENGTH_LONG).show();
            } else {
                ActivityCompat.requestPermissions(this,
                        new String[]{Manifest.permission.SEND_SMS}, MY_PERMISSIONS_REQUEST_SEND_SMS);
            }
        }
        setContentView(R.layout.main);
        setAlarm = findViewById(R.id.setAlarm);
        setAlarm.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                setContentView(R.layout.alarmscreen);
                recNum1 = findViewById(R.id.recNum1);

                Button ok = findViewById(R.id.confirmTime);
                final TimePicker alarmTime = findViewById(R.id.alarmTime);
                ok.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        try {
                            int hr = alarmTime.getHour();
                            int mmin = alarmTime.getMinute();
                            hour = Integer.toString(hr);
                            min = Integer.toString(mmin);
                            recNum = recNum1.getText().toString();
                            if (hr < 10 && mmin < 10) {
                                msgString = "~%&0" + hour + ":0" + min;
                            } else if (mmin < 10 && hr > 10) {
                                msgString = "~%&" + hour + ":0" + min;
                            } else if (hr < 10 && mmin > 10) {
                                msgString = "~%&0" + hour + ":" + min;
                            } else {
                                msgString = "~%&" + hour + ":" + min;
                            }
                            sendSMS(recNum, msgString);

                        } catch (Exception e) {
                            Toast.makeText(getApplicationContext(), "Error in getting time", Toast.LENGTH_SHORT).show();
                        }

                    }
                });
            }
        });
    }

    public void sendSMS(String recNum, String msgString) {
        try {
            SmsManager smsManager = SmsManager.getDefault();

            ArrayList<String> parts = smsManager.divideMessage(msgString);

            smsManager.sendMultipartTextMessage(recNum, null, parts, null, null);
            Toast.makeText(getApplicationContext(),
                    "Sent SMS", Toast.LENGTH_LONG).show();
        } catch (Exception e) {
            Toast.makeText(getApplicationContext(),
                    "Failed to send SMS", Toast.LENGTH_SHORT).show();
            e.printStackTrace();
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
        switch (requestCode) {
            case MY_PERMISSIONS_REQUEST_SEND_SMS: {
                if (grantResults.length > 0
                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    Toast.makeText(getApplicationContext(),
                            "Got permission", Toast.LENGTH_LONG).show();
                } else {
                    Toast.makeText(getApplicationContext(),
                            "Failed", Toast.LENGTH_LONG).show();

                }
            }

        }
    }
}


